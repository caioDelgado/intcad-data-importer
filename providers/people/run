#!/usr/bin/env node
'use strict'

const queue = require('queue')
const job = require('./job')
const ProgressBar = require('ascii-progress')
const lines = require('./data/providers.json')
  .filter(line => line.cd_status === 'A')

const progress = new ProgressBar({
  total: lines.length,
  schema: '[:bar] :current/:total :percent :elapseds/:etas. :errors errors'
})

const errors = []

const q = queue({
  concurrency: 50
})

const jobs = lines.map((person) => job.factory(person))

q.push(...jobs)

q.on('success', () => {
  progress.tick({ errors: errors.length })
})

q.on('error', err => {
  progress.tick({ errors: errors.length })

  if (err.message.includes('ENOTFOUND') || err.message.includes('ECONNRESET')) {
    progress.total++
    q.push(job.factory(err.person))
    return
  }

  if (!err.response) {
    return errors.push(`${err.cpf}: ${err.message}`)
  }

  errors.push(`${err.cpf}: ${err.response.data.error.message}`)
})

q.on('end', () => {
  console.log(`Errors (${errors.length}):`)
  console.log(errors.join('\n'))
  process.exit(0)
})

q.start()
